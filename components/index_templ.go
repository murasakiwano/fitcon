// Code generated by templ@v0.2.334 DO NOT EDIT.

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"fmt"
	"github.com/murasakiwano/fitcon/fitconner"
)

func Index() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<!doctype html><html lang=\"en\"><head><title>")
		if err != nil {
			return err
		}
		var_2 := `Metas Fitcon`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</title><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><link href=\"/css/output.css\" rel=\"stylesheet\"><script src=\"/assets/js/htmx.min.js\">")
		if err != nil {
			return err
		}
		var_3 := ``
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</script></head><body class=\"dark:bg-zinc-800\"><div id=\"main-container\" class=\"md:container md:mx-auto prose dark:prose-invert lg:prose-xl py-10 min-w-[90%]\"><h1 class=\"text-center\">")
		if err != nil {
			return err
		}
		var_4 := `Metas Fitcon`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h1><br>")
		if err != nil {
			return err
		}
		err = getParticipantButton().Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div></body></html>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func getParticipantButton() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_5 := templ.GetChildren(ctx)
		if var_5 == nil {
			var_5 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<form class=\"w-full max-w-sm mx-auto\" method=\"get\" hx-get=\"/users\" hx-swap=\"outerHTML\"><label class=\"block uppercase tracking-wide text-gray-700 dark:text-zinc-200 text-xs font-bold mb-2\">")
		if err != nil {
			return err
		}
		var_6 := `Insira sua matrícula`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" <div class=\"flex items-center border-b border-indigo-500 py-2\"><input class=\"placeholder:text-zinc-500 placeholder:italic appearance-none bg-transparent border-none w-full mr-3 py-1 px-2 leading-tight focus:border-none rounded-md text-zinc-700 dark:text-zinc-300\" type=\"text\" placeholder=\"C012345\" name=\"matricula\" aria-label=\"Matrícula\"><button class=\"flex-shrink-0 bg-indigo-500 hover:bg-indigo-700 border-indigo-500 hover:border-indigo-700 text-sm border-4 text-white py-1 px-2 rounded\" type=\"submit\">")
		if err != nil {
			return err
		}
		var_7 := `Buscar`
		_, err = templBuffer.WriteString(var_7)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></div></label></form>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func UserTable(fc fitconner.Fitconner) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_8 := templ.GetChildren(ctx)
		if var_8 == nil {
			var_8 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"space-x-5 mx-2 overflow-x-auto min-w-[100%]\"><table class=\"drop-shadow-2xl bg-white dark:bg-zinc-600 rounded-lg text-center\"><thead class=\"uppercase\"><tr><th class=\"p-5 bg-sky-600 rounded-tl-lg\" rowspan=\"2\">")
		if err != nil {
			return err
		}
		var_9 := `Matrícula`
		_, err = templBuffer.WriteString(var_9)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th class=\"p-5 bg-sky-600\" rowspan=\"2\">")
		if err != nil {
			return err
		}
		var_10 := `Número da Equipe`
		_, err = templBuffer.WriteString(var_10)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th class=\"p-5 bg-sky-600\" rowspan=\"2\">")
		if err != nil {
			return err
		}
		var_11 := `Nome da Equipe`
		_, err = templBuffer.WriteString(var_11)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th class=\"p-5 bg-sky-600\" rowspan=\"2\">")
		if err != nil {
			return err
		}
		var_12 := `Nome`
		_, err = templBuffer.WriteString(var_12)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th class=\"p-5 bg-sky-600\" colspan=\"2\">")
		if err != nil {
			return err
		}
		var_13 := `Meta 1`
		_, err = templBuffer.WriteString(var_13)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th class=\"p-5 bg-sky-600 rounded-tr-lg\" colspan=\"3\">")
		if err != nil {
			return err
		}
		var_14 := `Meta 2`
		_, err = templBuffer.WriteString(var_14)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th></tr><tr><th class=\"p-3 bg-sky-700\">")
		if err != nil {
			return err
		}
		var_15 := `Percentual de Gordura`
		_, err = templBuffer.WriteString(var_15)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th class=\"p-3 bg-sky-700\">")
		if err != nil {
			return err
		}
		var_16 := `Massa Magra`
		_, err = templBuffer.WriteString(var_16)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th class=\"p-3 bg-sky-700\">")
		if err != nil {
			return err
		}
		var_17 := `Gordura Visceral`
		_, err = templBuffer.WriteString(var_17)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th class=\"p-3 bg-sky-700\">")
		if err != nil {
			return err
		}
		var_18 := `Gordura Corporal`
		_, err = templBuffer.WriteString(var_18)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th class=\"p-3 bg-sky-700\">")
		if err != nil {
			return err
		}
		var_19 := `Massa Magra`
		_, err = templBuffer.WriteString(var_19)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th></tr></thead><tr><td class=\"text-center p-3 bg-zinc-700 font-medium rounded-bl-lg\">")
		if err != nil {
			return err
		}
		var var_20 string = fc.ID
		_, err = templBuffer.WriteString(templ.EscapeString(var_20))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</td><td class=\"text-center p-3 bg-zinc-700 font-medium\">")
		if err != nil {
			return err
		}
		var var_21 string = fmt.Sprintf("%v", fc.TeamNumber)
		_, err = templBuffer.WriteString(templ.EscapeString(var_21))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</td><td class=\"text-center p-3 bg-zinc-700 font-medium\">")
		if err != nil {
			return err
		}
		var var_22 string = fc.TeamName
		_, err = templBuffer.WriteString(templ.EscapeString(var_22))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</td><td class=\"text-center p-3 bg-zinc-700 font-medium\">")
		if err != nil {
			return err
		}
		var var_23 string = fc.Name
		_, err = templBuffer.WriteString(templ.EscapeString(var_23))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</td><td class=\"text-center p-3 bg-zinc-700\">")
		if err != nil {
			return err
		}
		var var_24 string = fc.Goal1FatPercentage
		_, err = templBuffer.WriteString(templ.EscapeString(var_24))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</td><td class=\"text-center p-3 bg-zinc-700\">")
		if err != nil {
			return err
		}
		var var_25 string = fc.Goal1LeanMass
		_, err = templBuffer.WriteString(templ.EscapeString(var_25))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</td><td class=\"text-center p-3 bg-zinc-700\">")
		if err != nil {
			return err
		}
		var var_26 string = fc.Goal2VisceralFat
		_, err = templBuffer.WriteString(templ.EscapeString(var_26))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</td><td class=\"text-center p-3 bg-zinc-700\">")
		if err != nil {
			return err
		}
		var var_27 string = fc.Goal2FatPercentage
		_, err = templBuffer.WriteString(templ.EscapeString(var_27))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</td><td class=\"text-center p-3 bg-zinc-700 rounded-br-lg\">")
		if err != nil {
			return err
		}
		var var_28 string = fc.Goal2LeanMass
		_, err = templBuffer.WriteString(templ.EscapeString(var_28))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</td></tr></table><button hx-get=\"/\" hx-target=\"#main-container\" class=\"font-medium hover:underline p-0 transition-all\">")
		if err != nil {
			return err
		}
		var_29 := `Voltar`
		_, err = templBuffer.WriteString(var_29)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func UserNotFound(matricula string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_30 := templ.GetChildren(ctx)
		if var_30 == nil {
			var_30 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"w-full max-w-sm mx-auto\"><p class=\"mx-auto\">")
		if err != nil {
			return err
		}
		var_31 := `Participante com matrícula `
		_, err = templBuffer.WriteString(var_31)
		if err != nil {
			return err
		}
		var var_32 string = fmt.Sprintf("%v ", matricula)
		_, err = templBuffer.WriteString(templ.EscapeString(var_32))
		if err != nil {
			return err
		}
		var_33 := `não foi encontrado`
		_, err = templBuffer.WriteString(var_33)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p><button hx-get=\"/\" hx-target=\"#main-container\" class=\"font-medium hover:underline p-0 transition-all\">")
		if err != nil {
			return err
		}
		var_34 := `Voltar`
		_, err = templBuffer.WriteString(var_34)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func InvalidUser(matricula string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_35 := templ.GetChildren(ctx)
		if var_35 == nil {
			var_35 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"w-full max-w-sm mx-auto\"><p class=\"mx-auto\">")
		if err != nil {
			return err
		}
		var_36 := `A matrícula `
		_, err = templBuffer.WriteString(var_36)
		if err != nil {
			return err
		}
		var var_37 string = fmt.Sprintf("%v ", matricula)
		_, err = templBuffer.WriteString(templ.EscapeString(var_37))
		if err != nil {
			return err
		}
		var_38 := `é inválida`
		_, err = templBuffer.WriteString(var_38)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p><button hx-get=\"/\" hx-target=\"#main-container\" class=\"font-medium hover:underline p-0 transition-all\">")
		if err != nil {
			return err
		}
		var_39 := `Voltar`
		_, err = templBuffer.WriteString(var_39)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
